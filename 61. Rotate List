/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head == NULL || head->next == NULL || k == 0) return head; // no need to rotate.
        // 1st pass, get the length
        int n{1}, count{0};
        ListNode *e{head}, *c{head};
        while(e->next != NULL){
            ++n;
            e = e->next;
        }
        k = k % n;
        if(k == 0) return head;
        // rotate
        while(count < n-k-1){
            ++count;
            c=c->next;
        }
        ListNode *out = c->next;
        e->next = head;
        c->next = NULL;
        //return
        return out;
    }
};
